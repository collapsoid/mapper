{"version":3,"sources":["store/actions/addPlace.js","store/actions/deletePlace.js","store/actions/changePlacePosition.js","store/actions/changeCoordinates.js","store/actions/getYMapsAPI.js","store/actions/getMapInstance.js","components/decoration/Popup/Popup.js","components/SearchBar/SearchBar.js","components/PlacesList/PlaceSlot/PlaceSlot.js","components/PlacesList/PlaceSlot/PlacesItem/PlacesItem.js","components/PlacesList/PlacesList.js","components/Placemark/Placemark.js","components/Polyline/Polyline.js","components/Maps/Maps.js","API/apikey.js","components/App.js","store/reducers/places.js","store/reducers/YMaps.js","store/index.js","index.js"],"names":["addPlace","place","type","payload","id","nanoid","deletePlace","changePlacePosition","targetIndex","dropIndex","changeCoordinates","name","coordinates","getYMapsAPI","YMapsAPI","getMapInstance","mapInstance","Popup","className","text","connect","places","geocoder","isUserDefined","dispatch","getState","YMaps","getCenter","geocode","then","response","geoObjects","get","geometry","_coordinates","useState","value","setValue","badName","setBadName","isPlaceAlreadyExist","findIndex","toLowerCase","trim","placeholder","onChange","target","onKeyDown","key","startsWith","appendPlace","children","useDrop","accept","drop","getItem","collect","monitor","ref","useDrag","item","drag","onClick","DndProvider","backend","HTML5Backend","map","index","properties","hintContent","options","draggable","preset","setCenter","modules","onGeometryChange","e","originalEvent","mapState","mapRef","setMapRef","placemarks","useEffect","query","load","apikey","state","onLoad","instanceRef","App","action","filter","arrayWithoutTargetItem","slice","center","zoom","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.374bd537.chunk.js","sourcesContent":["import {nanoid} from 'nanoid';\n\nconst addPlace = place => ({\n  type: 'ADD_PLACE',\n  payload: {\n    ...place,\n    id: nanoid()\n  }\n});\n\n\nconst geocoder = (name, isUserDefined) => {\n  return (dispatch, getState) => {\n    const {YMapsAPI, mapInstance} = getState().YMaps;\n\n\t\tconst place = {\n\t\t\tname,\n\t\t\tisUserDefined\n\t\t};\n\n    if (isUserDefined) {\n\t\t\tconst coordinates = mapInstance.getCenter();\n\n      return dispatch(addPlace({...place, coordinates}));\n    } else {\n      return YMapsAPI.geocode(name).then(response => {\n        const coordinates = response.geoObjects.get(0).geometry._coordinates;\n\n        return dispatch(addPlace({...place, coordinates}));\n      });\n    }\n  };\n};\n\n\nexport {addPlace, geocoder};\n","const deletePlace = id => ({\n  type: 'DELETE_PLACE',\n  id\n});\n\nexport default deletePlace;","const changePlacePosition = (targetIndex, dropIndex) => ({\n  type: 'CHANGE_PLACE_POSITION',\n  payload: {\n    targetIndex,\n    dropIndex\n  }\n});\n\nexport default changePlacePosition;\n","const changeCoordinates = (name, coordinates) => ({\n\ttype: 'CHANGE_COORDINATES',\n\tpayload: {\n\t\tname,\n\t\tcoordinates\n\t}\n});\n\nexport default changeCoordinates;\n","const getYMapsAPI = YMapsAPI => {\n  return {\n    type: 'GET_YMAPS_API',\n    YMapsAPI\n  };\n};\n\nexport default getYMapsAPI;","const getMapInstance = mapInstance => {\n  return {\n    type: 'GET_MAP_INSTANCE',\n    mapInstance\n  };\n};\n\nexport default getMapInstance;","import React from 'react';\n\nimport './Popup.css';\n\nconst Popup = ({className, text}) => {\n  return (\n    <div className={`${className} popup`}>\n      <p className=\"popup__text\">{text}</p>\n    </div>\n  );\n};\n\nexport default Popup;","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport './SearchBar.css';\n\nimport {geocoder} from '../../store/actions';\n\nimport Popup from '../decoration/Popup/Popup';\n\nconst SearchBar = ({places, geocoder}) => {\n  const [value, setValue] = useState('');\n  const [badName, setBadName] = useState(false);\n\n  const inputHadler = ({target: {value}}) => {\n    setValue(value);\n    isPlaceAlreadyExist(value) ? setBadName(true) : setBadName(false);\n  };\n\n  const isPlaceAlreadyExist = (value) => {\n    return places.findIndex(place => place.name.toLowerCase() === value.toLowerCase().trim()) === -1 ? false : true;\n  }\n\n  const appendPlace = () => {\n    const place = {\n      name: value.trim(),\n\n      // If the name of the place is preceeded by \"!\",\n      // then the coordinates of the place will be set from the center of the map.\n      // Otherwise, the geocoder will search for coordinates by the entered name\n      isUserDefined: value.startsWith('!') ? true : false\n    };\n\n    if (badName || place.name === '!') {\n      return;\n    }\n\n    setValue('');\n\n\t\treturn geocoder(place.name, place.isUserDefined);\n  };\n\n  return (\n    <div className=\"input\">\n      <input\n        className={`search-bar${badName ? ' bad-name' : ''}`}\n        type=\"text\"\n        value={value}\n        placeholder=\"Where to go?\"\n        onChange={inputHadler}\n        onKeyDown={({key}) => key === 'Enter' ? appendPlace() : null} />\n\n      <Popup className=\"input__popup\" text=\"Enter the name of the city or type something like !MyPlacemark to set your own mark label\" />\n    </div>\n  );\n};\n\nconst mapState = ({places}) => {\n  return {\n    places\n  };\n};\n\nexport default connect(mapState, {geocoder})(SearchBar);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useDrop} from 'react-dnd'; \n\nimport './PlaceSlot.css';\n\nimport {changePlacePosition} from '../../../store/actions';\n\nconst PlaceSlot = ({children, dropIndex, changePlacePosition}) => {\n  const [{getItem}, drop] = useDrop({\n    accept: 'place',\n    drop: () => changePlacePosition(getItem.targetIndex, dropIndex),\n    collect: monitor => ({\n      getItem: monitor.getItem()\n    })\n  });\n  \n  return <div ref={drop} className=\"places-list__place-slot\">{children}</div>;\n};\n\n\n\nconst mapState = ({places}) => ({\n  places\n});\n\nexport default connect(mapState, {changePlacePosition})(PlaceSlot);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {useDrag} from 'react-dnd';\n\nimport './PlacesItem.css';\n\nimport {deletePlace} from '../../../../store/actions';\n\nconst PlacesItem = ({name, id, isUserDefined, targetIndex, deletePlace}) => {\n  const className = isUserDefined ? ' place_user-defined' : '';\n  const [, drag] = useDrag({\n    item: {type: 'place', targetIndex}\n  });\n\n  return (\n    <div className={`places-list__place${className}`} ref={drag}>\n\n      {name}\n\n      <div className=\"place__remove-button\" onClick={() => deletePlace(id)}>x</div>\n    </div>\n  );\n};\n\nexport default connect(null, {deletePlace})(PlacesItem);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {DndProvider} from 'react-dnd';\nimport {HTML5Backend} from 'react-dnd-html5-backend';\n\nimport './PlacesList.css';\n\nimport PlaceSlot from './PlaceSlot/PlaceSlot';\nimport PlacesItem from './PlaceSlot/PlacesItem/PlacesItem';\n\nconst PlacesList = ({places}) => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"places-list\">\n\n\t{places.map((place, index) => <PlaceSlot dropIndex={index} children={<PlacesItem {...place} targetIndex={index} />} key={place.id} />)}\n\n      </div>\n    </DndProvider>\n  );\n};\n\nconst mapState = ({places}) => ({\n  places\n});\n\nexport default connect(mapState)(PlacesList);\n","import React from 'react';\nimport {Placemark as Mark} from 'react-yandex-maps';\nimport {connect} from 'react-redux';\n\nimport {changeCoordinates} from '../../store/actions';\n\nconst Placemark = ({name, isUserDefined, coordinates, mapInstance, changeCoordinates}) => {\n  const properties = {\n    hintContent: name\n  };\n\n  const options = {\n    draggable: isUserDefined ? true : false,\n    preset: isUserDefined ? 'islands#greenIcon' : 'islands#lightBlueIcon'\n  };\n\n\tif (!isUserDefined && coordinates) {\n\t\tmapInstance.setCenter(coordinates, 12);\n\t}\n\n  return <Mark \n            modules={['geoObject.addon.hint']}\n            geometry={coordinates} \n            properties={properties}\n            options={options} \n\t\t\t\t\t\tonGeometryChange={(e) => changeCoordinates(name, e.originalEvent.target.geometry._coordinates)}\n\t\t\t\t/>;\n};\n\nconst mapState = ({YMaps: {mapInstance}}) => ({\n\tmapInstance\n});\n\nexport default connect(mapState, {changeCoordinates})(Placemark);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Polyline as Poly} from 'react-yandex-maps';\n\nconst Polyline = ({places}) => {\n\tconst coordinates = places.map(place => place.coordinates);\n\n\treturn <Poly geometry={coordinates} />;\n};\n\nconst mapState = ({places}) => ({\n\tplaces\n});\n\nexport default connect(mapState)(Polyline);\n","import React, {useState, useEffect} from 'react';\nimport {YMaps, Map} from 'react-yandex-maps';\nimport {connect} from 'react-redux';\n\nimport './Maps.css';\n\nimport apikey from '../../API/apikey';\n\nimport {getYMapsAPI, getMapInstance} from '../../store/actions';\nimport Placemark from '../Placemark/Placemark';\nimport Polyline from '../Polyline/Polyline';\n\nconst Maps = ({getYMapsAPI, getMapInstance, places, mapState, geocoder}) => {\n  const [mapRef, setMapRef] = useState(null); // Without this hook, an infinite loop of value assignment will appear\n\n  const placemarks = places.map(place => <Placemark {...place} key={place.id} />);\n\n  useEffect(() => {\n    if (mapRef) {\n      getMapInstance(mapRef);\n    }\n  }, [mapRef, getMapInstance]);\n\n  return (\n    <YMaps query={{load: ['geocode'], apikey: apikey}}>\n      <Map\n        className=\"map\"\n        state={mapState}\n        onLoad={YMaps => getYMapsAPI(YMaps)}\n        instanceRef={map => setMapRef(map)}>\n\n\t\t\t\t{placemarks}\n\n\t\t\t\t<Polyline />\n\n      </Map>\n    </YMaps>\n  );\n};\n\n\nconst mapState = ({places, YMaps: {mapState, mapInstance}}) => {\n  return {\n    places,\n    mapState,\n    mapInstance\n  };\n};\n\nexport default connect(mapState, {getYMapsAPI, getMapInstance})(Maps);\n","const apikey = 'bafd3fc2-1269-47d7-a937-5c6cea882e91';\n\nexport default apikey;","import React from 'react';\n\nimport SearchBar from './SearchBar/SearchBar';\nimport PlacesList from './PlacesList/PlacesList';\nimport Maps from './Maps/Maps';\n\nconst App = () => {\n  return (\n    <>\n      <SearchBar />\n      <PlacesList />\n      <Maps />\n    </>\n  );\n}\n\nexport default App;\n","const places = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_PLACE':\n      return [...state, {...action.payload}];\n\n    case 'DELETE_PLACE':\n      return state.filter(place => place.id !== action.id);\n\n    case 'CHANGE_PLACE_POSITION':\n      const {targetIndex, dropIndex} = action.payload;\n      const arrayWithoutTargetItem = state.filter(place => place.name !== state[targetIndex].name);\n\n      return [...arrayWithoutTargetItem.slice(0, dropIndex), state[targetIndex], ...arrayWithoutTargetItem.slice(dropIndex)];\n\n    case 'CHANGE_COORDINATES':\n      const {name, coordinates} = action.payload;\n\n      return state.map(place => place.name === name ? {...place, coordinates} : place);\n\n    default:\n      return state;\n  }\n}\n\nexport default places;\n","const YMaps = (state = {mapState: {center: [55.75, 37.57], zoom: 9}}, action) => {\n  switch (action.type) {\n    case 'GET_YMAPS_API':\n      return {...state, YMapsAPI: action.YMapsAPI};\n  \n    case 'GET_MAP_INSTANCE':\n      return {...state, mapInstance: action.mapInstance};\n\n    case 'SET_MAP_STATE':\n     return {...state, mapState: {...state.mapState, ...action.mapState}};\n\n    default:\n      return state;\n  }\n};\n\nexport default YMaps;","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { places, YMaps } from './reducers';\n\nconst store = createStore(combineReducers({places, YMaps}), applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\n\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}