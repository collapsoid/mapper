{"version":3,"sources":["store/actions/addPlace.js","store/actions/deletePlace.js","store/actions/getYMapsAPI.js","store/actions/getMapInstance.js","store/actions/getPlaceCoordinates.js","components/decoration/Popup/Popup.js","components/SearchBar/SearchBar.js","components/PlacesList/PlacesItem/PlacesItem.js","components/PlacesList/PlacesList.js","components/Maps/Placemark/Placemark.js","components/Maps/Maps.js","API/apikey.js","components/App.js","store/reducers/places.js","store/reducers/YMaps.js","store/index.js","index.js"],"names":["addPlace","place","type","payload","id","nanoid","deletePlace","getYMapsAPI","YMapsAPI","getMapInstance","mapInstance","getPlaceCoordinates","name","coordinates","Popup","className","text","connect","places","useState","value","setValue","badName","setBadName","isPlaceAlreadyExist","findIndex","toLowerCase","trim","placeholder","onChange","target","onKeyDown","key","isUserDefined","startsWith","appendPlace","onClick","placesItems","map","placemarks","YMaps","geocoder","dispatch","getState","getCenter","geocode","then","response","geoObjects","get","geometry","_coordinates","properties","hintContent","options","draggable","preset","useEffect","setCenter","modules","mapState","mapRef","setMapRef","query","load","apikey","state","onLoad","instanceRef","App","action","filter","center","zoom","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6241520.chunk.js","sourcesContent":["import {nanoid} from 'nanoid';\n\nconst addPlace = place => ({\n  type: 'ADD_PLACE',\n  payload: {\n    ...place,\n    id: nanoid()\n  }\n});\n\nexport default addPlace;","const deletePlace = id => ({\n  type: 'DELETE_PLACE',\n  id\n});\n\nexport default deletePlace;","const getYMapsAPI = YMapsAPI => {\n  return {\n    type: 'GET_YMAPS_API',\n    YMapsAPI\n  };\n};\n\nexport default getYMapsAPI;","const getMapInstance = mapInstance => {\n  return {\n    type: 'GET_MAP_INSTANCE',\n    mapInstance\n  };\n};\n\nexport default getMapInstance;","const getPlaceCoordinates = (name, coordinates) => ({\n  type: 'GET_PLACE_COORDINATES',\n  payload: {\n    name,\n    coordinates\n  }\n});\n\nconst geocoder = (name, isUserDefined) => {\n  return (dispatch, getState) => {\n    const {YMapsAPI, mapInstance} = getState().YMaps;\n\n    if (isUserDefined) {\n      return dispatch(getPlaceCoordinates(name, mapInstance.getCenter()));\n    } else {\n      return YMapsAPI.geocode(name).then(response => {\n        const coordinates = response.geoObjects.get(0).geometry._coordinates;\n\n        return dispatch(getPlaceCoordinates(name, coordinates));\n      });\n    }\n  };\n};\n\nexport { getPlaceCoordinates, geocoder };\n","import React from 'react';\n\nimport './Popup.css';\n\nconst Popup = ({className, text}) => {\n  return (\n    <div className={`${className} popup`}>\n      <p className=\"popup__text\">{text}</p>\n    </div>\n  );\n};\n\nexport default Popup;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport './SearchBar.css';\n\nimport { addPlace } from '../../store/actions';\n\nimport Popup from '../decoration/Popup/Popup';\n\nconst SearchBar = ({places, addPlace}) => {\n  const [value, setValue] = useState('');\n  const [badName, setBadName] = useState(false);\n\n  const inputHadler = ({target: {value}}) => {\n    setValue(value);\n    isPlaceAlreadyExist(value) ? setBadName(true) : setBadName(false);\n  };\n\n  const isPlaceAlreadyExist = (value) => {\n    return places.findIndex(place => place.name.toLowerCase() === value.toLowerCase().trim()) === -1 ? false : true;\n  }\n\n  const appendPlace = () => {\n    const place = {\n      name: value.trim(),\n\n      // If the name of the place is preceeded by \"!\",\n      // then the coordinates of the place will be set from the center of the map.\n      // Otherwise, the geocoder will search for coordinates by the entered name\n      isUserDefined: value.startsWith('!') ? true : false\n    };\n\n    if (badName) {\n      return;\n    }\n\n    setValue('');\n\n    return addPlace(place);\n  };\n\n  return (\n    <div className=\"input\">\n      <input\n        className={`search-bar${badName ? ' bad-name' : ''}`}\n        type=\"text\"\n        value={value}\n        placeholder=\"Where to go?\"\n        onChange={inputHadler}\n        onKeyDown={({key}) => key === 'Enter' ? appendPlace() : null} />\n\n      <Popup className=\"input__popup\" text=\"Enter the name of the city or type something like !MyPlacemark to set your own mark label\" />\n    </div>\n  );\n};\n\nconst mapState = ({places}) => {\n  return {\n    places\n  };\n};\n\nexport default connect(mapState, {addPlace})(SearchBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './PlacesItem.css';\n\nimport { deletePlace } from '../../../store/actions';\n\nconst PlacesItem = ({name, id, isUserDefined, deletePlace}) => {\n  const className = isUserDefined ? ' place_user-defined' : '';\n\n  return (\n    <div className={`places-list__place${className}`}>\n      {name}\n      <div className=\"place__remove-button\" onClick={() => deletePlace(id)}>x</div>\n    </div>\n  );\n};\n\nexport default connect(null, {deletePlace})(PlacesItem);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './PlacesList.css';\n\nimport PlacesItem from './PlacesItem/PlacesItem';\n\nconst PlacesList = ({places}) => {\n  const placesItems = places.map(place => <PlacesItem {...place} key={place.id} />);\n\n  return (\n    <div className=\"places-list\">{placesItems}</div>\n  );\n};\n\nconst mapState = ({places}) => {\n  return {\n    places\n  };\n};\n\nexport default connect(mapState, null)(PlacesList);","import React, { useEffect } from 'react';\nimport { Placemark as Mark } from 'react-yandex-maps';\nimport { connect } from 'react-redux';\n\nimport { geocoder } from '../../../store/actions';\n\nconst Placemark = ({name, isUserDefined, coordinates, geocoder, mapInstance}) => {\n  const properties = {\n    hintContent: name\n  };\n\n  const options = {\n    draggable: isUserDefined ? true : false,\n    preset: isUserDefined ? 'islands#greenIcon' : 'islands#lightBlueIcon'\n  };\n\n  useEffect(() => {\n    geocoder(name, isUserDefined);\n  }, [name, isUserDefined, geocoder]);\n\n\tif (!isUserDefined && coordinates) {\n\t\tmapInstance.setCenter(coordinates, 12);\n\t}\n\n  return <Mark \n            modules={['geoObject.addon.hint']}\n            geometry={coordinates} \n            properties={properties}\n            options={options} />;\n};\n\nconst mapState = ({placemarks, YMaps: {mapInstance}}) => ({\n  placemarks,\n\tmapInstance\n});\n\nexport default connect(mapState, {geocoder})(Placemark);\n","import React, { useState, useEffect } from 'react';\nimport { YMaps, Map } from 'react-yandex-maps';\nimport { connect } from 'react-redux';\n\nimport './Maps.css';\n\nimport apikey from '../../API/apikey';\n\nimport { getYMapsAPI, getMapInstance } from '../../store/actions';\nimport Placemark from './Placemark/Placemark';\n\nconst Maps = ({getYMapsAPI, getMapInstance, places, mapState}) => {\n  const [mapRef, setMapRef] = useState(null); // Without this hook, an infinite loop of value assignment will appear\n\n  const placemarks = places.map(place => <Placemark {...place} key={place.id} />);\n\n  useEffect(() => {\n    if (mapRef) {\n      getMapInstance(mapRef);\n    }\n  }, [mapRef, getMapInstance]);\n\n  return (\n    <YMaps query={{load: ['geocode'], apikey: apikey}}>\n      <Map\n        className=\"map\"\n        state={mapState}\n        onLoad={YMaps => getYMapsAPI(YMaps)}\n        instanceRef={map => setMapRef(map)}>\n          {placemarks}\n      </Map>\n    </YMaps>\n  );\n};\n\nconst mapState = ({places, YMaps: {mapState, mapInstance}}) => {\n  return {\n    places,\n    mapState,\n    mapInstance\n  };\n};\n\nexport default connect(mapState, {getYMapsAPI, getMapInstance})(Maps);\n","const apikey = 'bafd3fc2-1269-47d7-a937-5c6cea882e91';\n\nexport default apikey;","import React from 'react';\n\nimport SearchBar from './SearchBar/SearchBar';\nimport PlacesList from './PlacesList/PlacesList';\nimport Maps from './Maps/Maps';\n\nconst App = () => {\n  return (\n    <>\n     <SearchBar />\n     <PlacesList />\n     <Maps />\n    </>\n  );\n}\n\nexport default App;","const places = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_PLACE':\n      return [...state, {...action.payload}];\n\n    case 'DELETE_PLACE':\n      return state.filter(place => place.id !== action.id);\n\n      case 'GET_PLACE_COORDINATES':\n        return state.map(place => place.name === action.payload.name ? {...place, coordinates: action.payload.coordinates} : place);\n  \n    default:\n      return state;\n  }\n}\n\nexport default places;","const YMaps = (state = {mapState: {center: [55.75, 37.57], zoom: 9}}, action) => {\n  switch (action.type) {\n    case 'GET_YMAPS_API':\n      return {...state, YMapsAPI: action.YMapsAPI};\n  \n    case 'GET_MAP_INSTANCE':\n      return {...state, mapInstance: action.mapInstance};\n\n    case 'SET_MAP_STATE':\n     return {...state, mapState: {...state.mapState, ...action.mapState}};\n\n    default:\n      return state;\n  }\n};\n\nexport default YMaps;","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { places, YMaps } from './reducers';\n\nconst store = createStore(combineReducers({places, YMaps}), applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\n\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}